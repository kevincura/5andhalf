//remove the price below the product title
remove_action( 'woocommerce_after_shop_loop_item_title', 'woocommerce_template_loop_price', 10 );

//add an SKU after the product title
add_action( 'woocommerce_shop_loop_item_title', 'wc_add_sku');
function wc_add_sku(){
    global $product;
    echo '<span class="sku"> (' . $product->get_sku().')</span>';
}	

//add custom sale price
add_action( 'woocommerce_before_shop_loop_item_title' , 'wc_sale_price');
function wc_sale_price(){
	global $product;
	echo "<div class='sale-price'>";
		$sale_price = $product->sale_price;
		$percentage = round( ( ( $product->regular_price - $sale_price ) / $product->regular_price ) * 100 );
		
		if( $sale_price ){ //show the sale price
			echo "<span class='sale-off'>".$price . sprintf( __('%s', 'woocommerce' ), $percentage . '%' )." OFF</span>";
			echo "<span class='discount'>$".$product->get_sale_price()."</span>";
		} else{ //this will show the regular price the item has no sale
			echo "<span class='price'>$".$product->regular_price."</span>";
		}
	echo "</div>";
};

//register custom endpoint
flush_rewrite_rules();
function wc_nic_endpoint() {
    add_rewrite_endpoint('not-in-stock', EP_ROOT);
}
add_action( 'init', 'wc_nic_endpoint' );

//hook into the endpoint
function include_print_template( $template ) {
    get_query_var('not-in-stock');
    if (false === get_query_var('not-in-stock', false)) {
        return $template;
    }

    $posts = wc_nic_json_array();

    wp_send_json( array(
        'posts' => $posts
    ));
}
add_filter('template_include', 'include_print_template');

//generate the array of JSON-ready Posts
function wc_nic_json_array() {
	//prepare an array container for the items
	$items = [];
	
	//initialize wordpress query
    $query = array(
	    'post_type' => 'product',
	    'posts_per_page' => -1,
	    'meta_query' => array(
	        array(
	            'key' => '_stock_status',
	            'value' => 'outofstock'
	        ),
	    ),
	);
	
	//start WP QUERY
	$wp_query = new WP_Query($query);
	
	while ($wp_query->have_posts()) : $wp_query->the_post();
		global $woocommerce, $product, $post;
		
		$product = new WC_Product(get_the_ID());
		$product_cats = wp_get_post_terms( get_the_ID(), 'product_cat' );
	
		$items[] = array(
            'product_name' => get_the_title(),
            'product_sku' => $product->get_sku(),
            'product_slug' => $post->post_name,
            'product_price' => $product->get_price(),
            'product_sale' => $product->is_on_sale(),
            'product_categories' => $product_cats[0]->name
        );
	endwhile;
	
	//this will stop showing the Wordpress template 
	wp_reset_query();

    return $items;
}

